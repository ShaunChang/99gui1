{"ast":null,"code":"var _jsxFileName = \"/Users/cxc/Desktop/my-project/src/components/ChatBox/ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport ChatContent from \"./components/ChatContent.jsx/ChatContent\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBoxContainer = styled.div`\nwidth: 740px;\nheight: 600px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`;\n_c = ChatBoxContainer;\nexport const ChatBox = () => {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const mockResponse = [{\n    id: 1,\n    response: 'hello'\n  }, {\n    id: 2,\n    response: 'thanks!'\n  }, {\n    id: 3,\n    response: 'hello'\n  }, {\n    id: 4,\n    response: 'thanks!'\n  }, {\n    id: 5,\n    response: 'hello'\n  }, {\n    id: 2,\n    response: 'thanks!'\n  }, {\n    id: 1,\n    response: 'hello'\n  }, {\n    id: 2,\n    response: 'thanks!'\n  }, {\n    id: 1,\n    response: 'hello'\n  }, {\n    id: 2,\n    response: 'thanks!'\n  }, {\n    id: 1,\n    response: 'hello'\n  }, {\n    id: 2,\n    response: 'thanks!'\n  }];\n  const sendRequest = () => {\n    const API_KEY = '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';\n    const API_URL = 'https://api-inference.huggingface.co/models/EleutherAI/gpt-neo-1.3B';\n    const headers = {\n      'Authorization': `${API_KEY}`,\n      'Content-Type': 'application/json'\n    };\n    const data = {\n      \"inputs\": \"Hello, how are you?\",\n      \"options\": {\n        \"model\": \"EleutherAI/gpt-neo-1.3B\",\n        \"temperature\": 0.5,\n        \"max_length\": 50\n      }\n    };\n    axios.post(API_URL, data, {\n      headers: {\n        'Authorization': `Bearer ${API_KEY}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(response.data[0].generated_text);\n      setContent(response.data[0].generated_text);\n    }).catch(error => {\n      console.log(error);\n      setContent(error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ChatBoxContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatContent, {\n      mockResponse: mockResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendRequest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatBox, \"gBEKy+H3646nRtptAd1VHeI3L5c=\");\n_c2 = ChatBox;\nexport default ChatBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatBoxContainer\");\n$RefreshReg$(_c2, \"ChatBox\");","map":{"version":3,"names":["axios","useState","ChatContent","styled","jsxDEV","_jsxDEV","ChatBoxContainer","div","_c","ChatBox","_s","content","setContent","mockResponse","id","response","sendRequest","API_KEY","API_URL","headers","data","post","then","console","log","generated_text","catch","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c2","$RefreshReg$"],"sources":["/Users/cxc/Desktop/my-project/src/components/ChatBox/ChatBox.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport ChatContent from \"./components/ChatContent.jsx/ChatContent\";\nimport styled from \"styled-components\";\n\n\nconst ChatBoxContainer = styled.div`\nwidth: 740px;\nheight: 600px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`\n\n\nexport const ChatBox =()=>{\n    const [content,setContent] = useState(\"\")\n\n    const mockResponse = [\n        {id:1,response: 'hello'},\n        {id:2,response: 'thanks!'},\n        {id:3,response: 'hello'},\n        {id:4,response: 'thanks!'},\n        {id:5,response: 'hello'},\n        {id:2,response: 'thanks!'},\n        {id:1,response: 'hello'},\n        {id:2,response: 'thanks!'},\n        {id:1,response: 'hello'},\n        {id:2,response: 'thanks!'},\n        {id:1,response: 'hello'},\n        {id:2,response: 'thanks!'}\n    ]\n  \n    const sendRequest = ()=>{\n      const API_KEY = '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';\n      const API_URL = 'https://api-inference.huggingface.co/models/EleutherAI/gpt-neo-1.3B';\n      const headers = { 'Authorization': `${API_KEY}`,'Content-Type': 'application/json'}\n      const data = { \n        \"inputs\": \"Hello, how are you?\",\n        \"options\": {\n        \"model\": \"EleutherAI/gpt-neo-1.3B\",\n        \"temperature\": 0.5,\n        \"max_length\": 50\n    } };\n  \n      axios.post(API_URL, data, { headers:{ 'Authorization': `Bearer ${API_KEY}`,'Content-Type': 'application/json'} })\n      .then(response => {console.log(response.data[0].generated_text);setContent(response.data[0].generated_text)})\n      .catch(error => {console.log(error); setContent(error.message)});\n    }\n\n    return(\n        <ChatBoxContainer>\n            <ChatContent mockResponse={mockResponse}/>\n            <button onClick={sendRequest}></button>\n            <div>{content}</div>\n        </ChatBoxContainer>\n    )\n}\n\nexport default ChatBox;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,0CAA0C;AAClE,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,MAAMC,gBAAgB,GAAGH,MAAM,CAACI,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,EAAA,GANKF,gBAAgB;AAStB,OAAO,MAAMG,OAAO,GAAEA,CAAA,KAAI;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEzC,MAAMY,YAAY,GAAG,CACjB;IAACC,EAAE,EAAC,CAAC;IAACC,QAAQ,EAAE;EAAO,CAAC,EACxB;IAACD,EAAE,EAAC,CAAC;IAACC,QAAQ,EAAE;EAAS,CAAC,EAC1B;IAACD,EAAE,EAAC,CAAC;IAACC,QAAQ,EAAE;EAAO,CAAC,EACxB;IAACD,EAAE,EAAC,CAAC;IAACC,QAAQ,EAAE;EAAS,CAAC,EAC1B;IAACD,EAAE,EAAC,CAAC;IAACC,QAAQ,EAAE;EAAO,CAAC,EACxB;IAACD,EAAE,EAAC,CAAC;IAACC,QAAQ,EAAE;EAAS,CAAC,EAC1B;IAACD,EAAE,EAAC,CAAC;IAACC,QAAQ,EAAE;EAAO,CAAC,EACxB;IAACD,EAAE,EAAC,CAAC;IAACC,QAAQ,EAAE;EAAS,CAAC,EAC1B;IAACD,EAAE,EAAC,CAAC;IAACC,QAAQ,EAAE;EAAO,CAAC,EACxB;IAACD,EAAE,EAAC,CAAC;IAACC,QAAQ,EAAE;EAAS,CAAC,EAC1B;IAACD,EAAE,EAAC,CAAC;IAACC,QAAQ,EAAE;EAAO,CAAC,EACxB;IAACD,EAAE,EAAC,CAAC;IAACC,QAAQ,EAAE;EAAS,CAAC,CAC7B;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAI;IACtB,MAAMC,OAAO,GAAG,uCAAuC;IACvD,MAAMC,OAAO,GAAG,qEAAqE;IACrF,MAAMC,OAAO,GAAG;MAAE,eAAe,EAAG,GAAEF,OAAQ,EAAC;MAAC,cAAc,EAAE;IAAkB,CAAC;IACnF,MAAMG,IAAI,GAAG;MACX,QAAQ,EAAE,qBAAqB;MAC/B,SAAS,EAAE;QACX,OAAO,EAAE,yBAAyB;QAClC,aAAa,EAAE,GAAG;QAClB,YAAY,EAAE;MAClB;IAAE,CAAC;IAEDpB,KAAK,CAACqB,IAAI,CAACH,OAAO,EAAEE,IAAI,EAAE;MAAED,OAAO,EAAC;QAAE,eAAe,EAAG,UAASF,OAAQ,EAAC;QAAC,cAAc,EAAE;MAAkB;IAAE,CAAC,CAAC,CAChHK,IAAI,CAACP,QAAQ,IAAI;MAACQ,OAAO,CAACC,GAAG,CAACT,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAACK,cAAc,CAAC;MAACb,UAAU,CAACG,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAACK,cAAc,CAAC;IAAA,CAAC,CAAC,CAC5GC,KAAK,CAACC,KAAK,IAAI;MAACJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;MAAEf,UAAU,CAACe,KAAK,CAACC,OAAO,CAAC;IAAA,CAAC,CAAC;EAClE,CAAC;EAED,oBACIvB,OAAA,CAACC,gBAAgB;IAAAuB,QAAA,gBACbxB,OAAA,CAACH,WAAW;MAACW,YAAY,EAAEA;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC1C5B,OAAA;MAAQ6B,OAAO,EAAElB;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU,eACvC5B,OAAA;MAAAwB,QAAA,EAAMlB;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAE3B,CAAC;AAAAvB,EAAA,CA1CYD,OAAO;AAAA0B,GAAA,GAAP1B,OAAO;AA4CpB,eAAeA,OAAO;AAAC,IAAAD,EAAA,EAAA2B,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
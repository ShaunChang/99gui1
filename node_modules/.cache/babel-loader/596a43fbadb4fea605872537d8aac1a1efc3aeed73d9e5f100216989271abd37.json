{"ast":null,"code":"var _jsxFileName = \"/Users/cxc/Desktop/my-project/src/components/ChatBox/ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport ChatContent from \"./components/ChatContent.jsx/ChatContent\";\nimport styled from \"styled-components\";\nimport ChatInput from \"./components/ChatInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBoxContainer = styled.div`\nwidth: 740px;\nheight: 600px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`;\n_c = ChatBoxContainer;\nexport const ChatBox = () => {\n  _s();\n  const [content, setContent] = useState([]);\n  const mockResponse = [{\n    id: 1,\n    response: 'hello'\n  }, {\n    id: 2,\n    response: 'thanks!'\n  }, {\n    id: 3,\n    response: 'hello'\n  }, {\n    id: 4,\n    response: 'thanks!'\n  }, {\n    id: 5,\n    response: 'hello'\n  }, {\n    id: 2,\n    response: 'thanks!'\n  }, {\n    id: 1,\n    response: 'hello'\n  }, {\n    id: 2,\n    response: 'thanks!'\n  }, {\n    id: 1,\n    response: 'hello'\n  }, {\n    id: 2,\n    response: 'thanks!'\n  }, {\n    id: 1,\n    response: 'hello'\n  }, {\n    id: 2,\n    response: 'thanks!'\n  }];\n  const sendRequest = input => {\n    console.log(input);\n    const API_KEY = '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';\n    const API_URL = 'https://api-inference.huggingface.co/models/EleutherAI/gpt-neo-1.3B';\n    const headers = {\n      'Authorization': `Bearer ${API_KEY}`,\n      'Content-Type': 'application/json'\n    };\n    const data = {\n      \"inputs\": input,\n      \"options\": {\n        \"model\": \"EleutherAI/gpt-neo-1.3B\",\n        \"temperature\": 0.5,\n        \"max_length\": 50\n      }\n    };\n    axios.post(API_URL, data, {\n      headers\n    }).then(responseRes => {\n      setContent(preState => [...preState, {\n        id: 1,\n        response: responseRes.data[0].generated_text\n      }]);\n    }).catch(error => {\n      setContent(preState => [...preState, {\n        id: 1,\n        response: error.message\n      }]);\n    });\n  };\n  const saveRequest = (userId, question) => {\n    axios.post(`http://localhost:8080/api/v1/chat/user/{userId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(ChatBoxContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatContent, {\n      mockResponse: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      sendRequest: sendRequest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatBox, \"i4OLfxo/wU8y2BYs1Y4tBm2F6Y8=\");\n_c2 = ChatBox;\nexport default ChatBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatBoxContainer\");\n$RefreshReg$(_c2, \"ChatBox\");","map":{"version":3,"names":["axios","useState","ChatContent","styled","ChatInput","jsxDEV","_jsxDEV","ChatBoxContainer","div","_c","ChatBox","_s","content","setContent","mockResponse","id","response","sendRequest","input","console","log","API_KEY","API_URL","headers","data","post","then","responseRes","preState","generated_text","catch","error","message","saveRequest","userId","question","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/cxc/Desktop/my-project/src/components/ChatBox/ChatBox.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport ChatContent from \"./components/ChatContent.jsx/ChatContent\";\nimport styled from \"styled-components\";\nimport ChatInput from \"./components/ChatInput\";\n\n\nconst ChatBoxContainer = styled.div`\nwidth: 740px;\nheight: 600px;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`\n\n\nexport const ChatBox =()=>{\n    const [content,setContent] = useState([])\n\n    const mockResponse = [\n        {id:1,response: 'hello'},\n        {id:2,response: 'thanks!'},\n        {id:3,response: 'hello'},\n        {id:4,response: 'thanks!'},\n        {id:5,response: 'hello'},\n        {id:2,response: 'thanks!'},\n        {id:1,response: 'hello'},\n        {id:2,response: 'thanks!'},\n        {id:1,response: 'hello'},\n        {id:2,response: 'thanks!'},\n        {id:1,response: 'hello'},\n        {id:2,response: 'thanks!'}\n    ]\n\n\n    const sendRequest = (input)=>{\n        console.log(input)\n        const API_KEY = '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';\n        const API_URL = 'https://api-inference.huggingface.co/models/EleutherAI/gpt-neo-1.3B';\n        const headers = { 'Authorization': `Bearer ${API_KEY}`,'Content-Type': 'application/json'}\n        const data = { \n        \"inputs\": input,\n        \"options\": {\n        \"model\": \"EleutherAI/gpt-neo-1.3B\",\n        \"temperature\": 0.5,\n        \"max_length\": 50\n    } };\n      axios.post(API_URL, data, { headers })\n      .then(responseRes => {setContent(preState=> [...preState,{id: 1,response:responseRes.data[0].generated_text}])})\n      .catch(error => {setContent(preState=> [...preState,{id: 1,response:error.message}])})\n    }\n\n    const saveRequest = (userId,question)=>{\n        axios.post(`http://localhost:8080/api/v1/chat/user/{userId}`)\n    }\n\n    return(\n        <ChatBoxContainer>\n            <ChatContent mockResponse={content}/>\n            <ChatInput sendRequest={sendRequest}/>\n        </ChatBoxContainer>\n    )\n}\n\nexport default ChatBox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}